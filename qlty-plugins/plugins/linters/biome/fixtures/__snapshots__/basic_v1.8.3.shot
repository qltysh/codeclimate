// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linter=biome fixture=basic version=1.8.3 1`] = `
{
  "issues": [
    {
      "category": "CATEGORY_STYLE",
      "level": "LEVEL_FMT",
      "location": {
        "path": "basic.in.ts",
      },
      "message": "Incorrect formatting, autoformat by running \`qlty fmt\`.",
      "mode": "MODE_BLOCK",
      "onAddedLine": true,
      "ruleKey": "fmt",
      "tool": "biome",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.in.ts",
        "range": {
          "endColumn": 22,
          "endLine": 13,
          "startColumn": 3,
          "startLine": 13,
        },
      },
      "message": "This block statement doesn't serve any purpose and can be safely removed.",
      "mode": "MODE_BLOCK",
      "ruleKey": "lint/complexity/noUselessLoneBlockStatements",
      "snippet": "  { !foo ? null : 1 }",
      "snippetWithContext": "
enum Bar { Baz };

const foo = (bar: Bar) => {
  switch (bar) {
    case Bar.Baz:
      foobar();
      barfoo();
      break;
  }
  { !foo ? null : 1 }
}

enum Foo { Bae };",
      "suggestions": [
        {
          "patch": "--- original
+++ modified
@@ -9,8 +9,7 @@
       foobar();
       barfoo();
       break;
-  }
-  { !foo ? null : 1 }
+  }!foo ? null : 1 
 }

 enum Foo { Bae };
",
          "replacements": [
            {
              "location": {
                "range": {
                  "endColumn": 5,
                  "endLine": 13,
                  "startColumn": 4,
                  "startLine": 12,
                },
              },
            },
            {
              "location": {
                "range": {
                  "endColumn": 22,
                  "endLine": 13,
                  "startColumn": 21,
                  "startLine": 13,
                },
              },
            },
          ],
          "source": "SUGGESTION_SOURCE_TOOL",
        },
      ],
      "tool": "biome",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.in.ts",
        "range": {
          "endColumn": 9,
          "endLine": 4,
          "startColumn": 6,
          "startLine": 4,
        },
      },
      "message": "This enum declaration contains members that are implicitly initialized.",
      "mode": "MODE_BLOCK",
      "ruleKey": "lint/style/useEnumInitializers",
      "snippet": "enum Bar { Baz };",
      "snippetWithContext": "const foobar = () => { }
const barfoo = () => { }

enum Bar { Baz };

const foo = (bar: Bar) => {
  switch (bar) {
    case Bar.Baz:
      foobar();
      barfoo();
      break;
  }
  { !foo ? null : 1 }
}",
      "suggestions": [
        {
          "patch": "--- original
+++ modified
@@ -1,7 +1,7 @@
 const foobar = () => { }
 const barfoo = () => { }

-enum Bar { Baz };
+enum Bar { Baz = 0 };

 const foo = (bar: Bar) => {
   switch (bar) {
",
          "replacements": [
            {
              "data": "= 0 ",
              "location": {
                "range": {
                  "endColumn": 16,
                  "endLine": 4,
                  "startColumn": 16,
                  "startLine": 4,
                },
              },
            },
          ],
          "source": "SUGGESTION_SOURCE_TOOL",
        },
      ],
      "tool": "biome",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.in.ts",
        "range": {
          "endColumn": 9,
          "endLine": 16,
          "startColumn": 6,
          "startLine": 16,
        },
      },
      "message": "This enum declaration contains members that are implicitly initialized.",
      "mode": "MODE_BLOCK",
      "ruleKey": "lint/style/useEnumInitializers",
      "snippet": "enum Foo { Bae };",
      "snippetWithContext": "const foo = (bar: Bar) => {
  switch (bar) {
    case Bar.Baz:
      foobar();
      barfoo();
      break;
  }
  { !foo ? null : 1 }
}

enum Foo { Bae };",
      "suggestions": [
        {
          "patch": "--- original
+++ modified
@@ -13,4 +13,4 @@
   { !foo ? null : 1 }
 }

-enum Foo { Bae };
+enum Foo { Bae = 0 };
",
          "replacements": [
            {
              "data": "= 0 ",
              "location": {
                "range": {
                  "endColumn": 16,
                  "endLine": 16,
                  "startColumn": 16,
                  "startLine": 16,
                },
              },
            },
          ],
          "source": "SUGGESTION_SOURCE_TOOL",
        },
      ],
      "tool": "biome",
    },
  ],
}
`;
