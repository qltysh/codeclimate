name: Plugins
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: read
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    if: github.actor != 'dependabot[bot]'
    strategy:
      fail-fast: false
      matrix:
        os:
          [macos-latest-xlarge, ubuntu-latest-16-cores, windows-latest-16-cores]
    name: Plugins test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üì¶ Use Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: plugins/package-lock.json

      # Generate Cache key for Linux/macOS
      - name: üîí Set CACHE_MONTH on Linux/macOS
        run: echo "CACHE_MONTH=$(date +'%Y-%m')" >> $GITHUB_ENV

      - name: üíæ Cache qlty tools
        uses: actions/cache@v3
        with:
          path: ~/.qlty
          key: ${{ runner.os }}-qlty-${{ env.CACHE_MONTH }}

      - name: üì¶ Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        if: matrix.os == 'macos-latest-xlarge'

      - name: üì¶ Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
        if: matrix.os == 'windows-latest-16-cores'

      - name: ü¶Ä Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: ü´ô Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: ‚öôÔ∏è cargo build
        run: cargo build
        env:
          RUST_BACKTRACE: 1

      - name: Move qlty into PATH
        run: echo "${{ github.workspace }}/target/debug" >> $GITHUB_PATH

      - name: üîç Check qlty version
        run: qlty --version

      # Login to the GitHub Container Registry to reduce trivy rate limiting errors
      - name: Log in to registry
        # macOS does not support Docker
        if: matrix.os != 'macos-latest-xlarge'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run plugins tests
        working-directory: plugins
        run: |
          npm ci
          npm test -- --testPathIgnorePatterns=trivy
